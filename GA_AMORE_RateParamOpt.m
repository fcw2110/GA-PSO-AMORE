

%% Step 1.
% Estimate the number of parameters to be optimized

% TOTALED_NUM_RXTS = pyrunfile("TOTAL_NUM_.py", ...
%     "TOTALED_NUM_RXTS", OLD_FILE_NAME="AMORE_10_1");

TOTALED_NUM_PRODS = pyrunfile("TOTAL_NUM_.py", ...
    "TOTALED_NUM_PRODS", OLD_FILE_NAME="AMORE_10_1");
% ALL_PRODS_LIST_IDXs = double(pyrunfile("TOTAL_NUM_.py", ...
%     "ALL_PRODS", OLD_FILE_NAME="AMORE_10_1"));

global TOTAL_NUM_PRODS

% TOTAL_NUM_RXTS = sum(double(TOTALED_NUM_RXTS));
% CUMSUM_NUM_RXTS = cumsum(double(TOTALED_NUM_RXTS));

TOTAL_NUM_PRODS = sum(double(TOTALED_NUM_PRODS));
CUMSUM_NUM_PRODS = cumsum(double(TOTALED_NUM_PRODS));

%% Step 2.
% Create function
%M = [2, 1.974517662, 1.313432376, 0.10191976, 0.011968377, 1.027299624, 1.943925842, 1.34E-05, 1.99790921, 1.864140531, 0.825556679, 1.999167447, 1.944128467, 1.99969439, 0.274994406, 0.442343351, 0.176558586, 0.413530477, 0.166958339, 1.322884997, 0.745476798, 0.476272354, 0.029669561, 7.96E-05, 1.919767811, 1.973860642, 1.415579773, 0.22715714, 0.003329337, 0.965501847, 0.010187543, 0.041635241, 1.618058957, 0.233284076, 1.985143272, 0.273673559, 2, 1.955359681, 1.755740655, 0.093693666, 1.946408948, 1.231719518, 0.045750281, 0.002483349, 0.073043921, 0.997860783, 0.445147987, 1.188277176, 1.850110999, 0.774688163, 0.00416257, 0.003137444, 0.448318696, 1.714281887, 1.8380607, 1.970688539, 1.999999129, 1.927145764, 1.948640163, 1.602620845, 1.661081648, 0.078974421, 1.454224699, 1.394534639, 0, 0.203819821, 0.518437944, 1.950325191, 0.496304016, 0.688128837, 0, 1.015819349, 2, 0.372554719, 0.169441647, 0.211135741, 0, 1.934987112, 1.213202926, 0.975227166, 0.662109994, 1.967137386, 1.629200043, 0.000112912, 0.0021903, 0.910967448, 0.08150899, 0.146031496, 1.155187117, 0.096062299, 0.000100458, 1.501367577, 1.207567171, 0.000148353, 1.256832107, 0.943630979, 2, 0.289986718, 1.722306518, 1.569864732, 1.98635774, 0.005075756, 0.321912822, 0, 0.298603008, 0.433361907, 42.19949981, 82.68096478, 43.80905929, 51.26098169, 44.20213518, 77.25346929, 70.03528136, 38.44295213, 23.22969073, 80.87753676, 70.78059822, 0.04237791, 9.431844513, 44.72972403, 90.02758811, 97.96453733, 4.575251052, 77.82462687, 84.75883344, 13.99106119, 85.59839358, 1.021167332]

opts = optimoptions('particleswarm','Display', ...
    'iter', 'SwarmSize', 50, 'MaxIterations', 100)%, 'InitialPoints', M) %, 'MaxTime', 45000);
% x = particleswarm(@ErrorEval, length(ALL_PRODS _LIST_IDXs), ...
%     ones(length(ALL_PRODS_LIST_IDXs), 1) * 0.01, ...
%     ones(length(ALL_PRODS_LIST_IDXs), 1) * 2, opts)

global S0
S0 = ref_mech_data_collect_10_18_23();

% 22 for GA + AMORE
% 16 for AMORE v1
%14 for amore v1.2


x = particleswarm(@(x)ErrorEval(x,S0), TOTAL_NUM_PRODS + 22, ...
    [ones(1, TOTAL_NUM_PRODS) * 0.0, ones(1, 22) * 0.0], ...
    [ones(1, TOTAL_NUM_PRODS) * 2, ones(1, 22) * 100], opts)

%% Step 3.
% Evaluate error

function [Error] = ErrorEval(x, S0)

    copyfile 'AMORE_10_1.txt' 'AMORE_10_1_copy.m';

    stoichparams_fixed = x;

    PARAMETERIZED = pyrunfile("RATE_PARAMETER_OPT_3.py", ...
    "RATE_PARAMETERIZED", ALL_PARAMS_=stoichparams_fixed, OLD_FILE_NAME='AMORE_10_1_copy');
    
%     Error = multiparam_run_7_6_23("AMORE_10_1_copy", S0);
    Error = multiparam_run_8_24_23("AMORE_10_1_copy", S0);

    %disp(Error);

    delete('AMORE_10_1_copy.m');

end



